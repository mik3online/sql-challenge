---------------------------------------
--Michael Strati // Module 09 Challenge
---------------------------------------
--STEP 1 // Create Tables
---------------------------------------
CREATE TABLE departments (
    dept_no VARCHAR(255),
    dept_name VARCHAR(255) NOT NULL
);
---------------------------------------
CREATE TABLE dept_emp (
    emp_no INTEGER,
    dept_no VARCHAR(255) NOT NULL
);
---------------------------------------
CREATE TABLE dept_manager (
    dept_no VARCHAR(255) NOT NULL,
	emp_no INTEGER
);
---------------------------------------
CREATE TABLE employees (
    emp_no INTEGER,
	emp_title_id VARCHAR(255) NOT NULL,
	birth_date DATE,
	first_name VARCHAR(255),
	last_name VARCHAR(255),
	sex VARCHAR(255),
	hire_date DATE
);
---------------------------------------
CREATE TABLE salaries (
	emp_no INTEGER,
	salary MONEY
);
---------------------------------------
CREATE TABLE titles (
	emp_title_id VARCHAR(255) NOT NULL,
	title VARCHAR(255)
);

---------------------------------------
--STEP 2 // Alter Keys
--Primary Keys:
    -- departments.dept_no
    -- employees.emp_no
    -- titles.emp_title_id
    -- dept_emp.emp_no, dept_emp.dept_no (composite primary key)
    -- dept_manager.dept_no, dept_manager.emp_no (composite primary key)
    -- salaries.emp_no
	
--Foreign Keys:
    -- dept_emp.emp_no references employees.emp_no
    -- dept_emp.dept_no references departments.dept_no
    -- dept_manager.dept_no references departments.dept_no
    -- dept_manager.emp_no references employees.emp_no
    -- salaries.emp_no references employees.emp_no
---------------------------------------
--Table: departments - Add Primary Key
ALTER TABLE departments
ADD CONSTRAINT pk_departments PRIMARY KEY (dept_no);

--Table: employees - Add Primary Key and Foreign Key
ALTER TABLE employees
ADD CONSTRAINT pk_employees PRIMARY KEY (emp_no);

--Table: titles - Add Primary Key
ALTER TABLE titles
ADD CONSTRAINT pk_titles PRIMARY KEY (emp_title_id);

--Table: dept_emp - Add Primary Key and Foreign Keys
ALTER TABLE dept_emp
ADD CONSTRAINT pk_dept_emp PRIMARY KEY (emp_no, dept_no),
ADD CONSTRAINT fk_dept_emp_employees FOREIGN KEY (emp_no) REFERENCES employees(emp_no),
ADD CONSTRAINT fk_dept_emp_departments FOREIGN KEY (dept_no) REFERENCES departments(dept_no);

--Table: dept_manager - Add Primary Key and Foreign Keys
ALTER TABLE dept_manager
ADD CONSTRAINT pk_dept_manager PRIMARY KEY (dept_no, emp_no),
ADD CONSTRAINT fk_dept_manager_departments FOREIGN KEY (dept_no) REFERENCES departments(dept_no),
ADD CONSTRAINT fk_dept_manager_employees FOREIGN KEY (emp_no) REFERENCES employees(emp_no);

--ALTER TABLE salaries
ALTER TABLE salaries
ADD CONSTRAINT pk_salaries PRIMARY KEY (emp_no),
ADD CONSTRAINT fk_salaries_employees FOREIGN KEY (emp_no) REFERENCES employees(emp_no);
---------------------------------------
--Step 3 - Data Analaysis
---------------------------------------
--Data Analysis #1 --List the employee number, last name, first name, sex, and salary of each employee.
---------------------------------------
SELECT
    e.emp_no,
    e.last_name,
    e.first_name,
    e.sex,
    s.salary
FROM
    employees AS e
JOIN
    salaries AS s ON e.emp_no = s.emp_no;

---------------------------------------
--Data Analysis #2 --List the first name, last name, and hire date for the employees who were hired in 1986:
---------------------------------------
SELECT
    first_name,
    last_name,
    hire_date
FROM
    employees
WHERE
    EXTRACT(YEAR FROM hire_date) = 1986;

---------------------------------------
--Data Analysis #3 --List the manager of each department along with their department number, department name, employee number, last name, and first name:
---------------------------------------
SELECT
    dm.dept_no,
    d.dept_name,
    dm.emp_no,
    e.last_name,
    e.first_name
FROM
    dept_manager AS dm
JOIN
    departments AS d ON dm.dept_no = d.dept_no
JOIN
    employees AS e ON dm.emp_no = e.emp_no;
---------------------------------------
--Data Analysis #4 --List the department number for each employee along with that employeeâ€™s employee number, last name, first name, and department name:
---------------------------------------
SELECT
    de.emp_no,
    e.last_name,
    e.first_name,
    de.dept_no,
    d.dept_name
FROM
    dept_emp AS de
JOIN
    employees AS e ON de.emp_no = e.emp_no
JOIN
    departments AS d ON de.dept_no = d.dept_no;
---------------------------------------
--Data Analysis #5 --List first name, last name, and sex of each employee whose first name is Hercules and whose last name begins with the letter B:
---------------------------------------
SELECT
    first_name,
    last_name,
    sex
FROM
    employees
WHERE
    first_name = 'Hercules' AND last_name LIKE 'B%';
---------------------------------------
--Data Analysis #6 --List each employee in the Sales department, including their employee number, last name, and first name:
---------------------------------------
SELECT
    e.emp_no,
    e.last_name,
    e.first_name
FROM
    employees AS e
JOIN
    dept_emp AS de ON e.emp_no = de.emp_no
JOIN
    departments AS d ON de.dept_no = d.dept_no
WHERE
    d.dept_name = 'Sales';
---------------------------------------
--Data Analysis #7 --List each employee in the Sales and Development departments, including their employee number, last name, first name, and department name:
---------------------------------------
SELECT
    e.emp_no,
    e.last_name,
    e.first_name,
    d.dept_name
FROM
    employees AS e
JOIN
    dept_emp AS de ON e.emp_no = de.emp_no
JOIN
    departments AS d ON de.dept_no = d.dept_no
WHERE
    d.dept_name IN ('Sales', 'Development');
---------------------------------------
--Data Analysis #8 --List the frequency counts, in descending order, of all the employee last names (that is, how many employees share each last name):
---------------------------------------
SELECT
    last_name,
    COUNT(*) AS frequency
FROM
    employees
GROUP BY
    last_name
ORDER BY
    frequency DESC;
---------------------------------------
--END



